function trial = MotoTrak_Update_Monitor_Plots(handles,session,trial)

%
%MotoTrak_Update_Monitor_Plots.m - Vulintus, Inc.
%
%   MOTOTRAK_UPDATE_MONITOR_PLOTs plots new streaming data from the
%   MotoTrak controller to the streaming plots on the MotoTrak GUI during
%   inter-trial idle periods.
%   
%   UPDATE LOG:
%   05/02/2015 - Drew Sloan - Function first implemented, cutting existing
%       monitored signal stream read sections from 
%       MotoTrak_Behavior_Loop.m.
%

cur_tab = handles.plot_tab_grp.SelectedTab.Title;                           %Grab the currently selected tab title.
if strcmpi(handles.device,'both')                                           %If this is a combined touch-pull session...
    set(trial.plot_h(1),'ydata',session.buffer(:,2));                       %Update the force area plot.
    trial.max_y = ...
        [min([1.1*min(session.buffer(:,2)), -0.1*trial.thresh]),...
        max([1.1*max(session.buffer(:,2)), 1.3*trial.thresh])];             %Calculate new y-axis limits.
    ylim(handles.primary_ax,trial.max_y);                                   %Set the new y-axis limits.
    set(trial.plot_h(3),'ydata',trial.mon_signal);                          %Update the touch area plot.
    trial.max_y = ...
        [min([1.1*min(trial.mon_signal), -1.1*handles.init]),...
        max([1.1*max(trial.mon_signal), 1.1*handles.init])];                %Calculate new y-axis limits.
    ylim(handles.secondary_ax,trial.max_y);                                 %Set the new y-axis limits.
else                                                                        %Otherwise...
    switch lower(cur_tab)                                                   %Switch between the tabs...
        case {'supination angle',...
                'pull force',...
                'lever angle'}                                              %If the selected tab is the primary signal...
            set(trial.plot_h(1),'ydata',trial.mon_signal);                  %Update the area plot.
            trial.max_y = ...
                [min([1.1*min(trial.mon_signal), -0.1*trial.thresh]),...
                max([1.1*max(trial.mon_signal), 1.3*trial.thresh])];        %Calculate new y-axis limits.
            ylim(handles.primary_ax,trial.max_y);                           %Set the new y-axis limits.            
        case 'swipe sensor'                                                 %If the selected tab is the secondary signal...
            set(trial.plot_h(3),'ydata',session.buffer(:,3),...
                'basevalue',session.minmax_ir(1));                          %Update the IR signal plot.
            set(trial.ir_thresh_ln,'ydata',[1,1]*session.minmax_ir(3));     %Update the threshold line.
            set(trial.ir_thresh_txt,'position',[1,session.minmax_ir(3)]);   %Update the threshold line label.
            temp = session.minmax_ir(1:2);                                  %Grab the current historical minimum and maximum.
            if temp(1) > temp(2)                                            %If the 1st value is greater than the second...
                temp = [0, 1023];                                           %Set the infrared bounds to the maximum possible.
            elseif temp(1) == temp(2)                                       %If the 1st value equals the 2nd...
                temp = temp(1) + [-1,1];                                    %Add one above and below the single value.
            end
            temp = temp + [-0.1,0.1]*(temp(2) - temp(1));                   %Calculate y-axis limits.
            ylim(handles.secondary_ax,temp);                                %Set the secondary axes y-axis limits.
    end    
end